package Chapter_17_리액티브_프로그래밍;

public class Section1 {
    public static void main(String[] args) {
    /**
     *              > 리액티브 프로그래밍
     *
     *  리액티브 프로그래밍은 아래의 세 가지 이유로 최근 대두되었다
     *
     *      1. 빅데이터 : 보통 빅데이터는 패타바이트 단위로 구성되며 매일 증가한다.
     *      2. 다양한 환경 : 모바일 디바이스에서 수천 개의 멀티 코어 프로세서로 실행되는 클라우드 기반 클러스터에 이르기까지 다양한 환경에 애플리케이션이
     *      배포된다.
     *      3. 사용 패턴 : 사용자는 1년 내내 항상 서비스를 이용할 수 있으며 밀리초 단위의 응답 시간을 기대한다.
     *
     *  지금까지의 아키텍쳐로는 이들을 만족시키기 어렵다.
     *
     *  리액티브 프로그래밍에서는 다양한 시스템과 소스에서 들어오는 데이터 항목 스트림을 비동기적으로 처리하고 합쳐서 이런 문제를 해결하낟. 실제로 이런 패러다임에
     *  맞게 설계된 애플리케이션은 발생한 데이터 항목을 바로 처리함으로써 사용자에게 높은 응답성을 제공한다. 게다가 한 개의 컴포넌트나 애플리케이션뿐만 아니라
     *  전체의 리액티브 시스템을 구성하는 여러 컴포넌트를 조절하는 데도 리액티브 기법을 사용한다. 이런 방식으로 구성된 시스템에서는 고장, 정전 같은 상태에
     *  대처할 뿐 아니라 다양한 네트워크 상태에서 메시지를 교화낳고 전달할 수 있으며, 무거운 작업을 하고 있는 상황에서도 가용성을 제공한다.
     *
     */
    }
}
